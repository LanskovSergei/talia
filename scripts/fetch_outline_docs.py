import os
import httpx
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

OUTLINE_API_KEY = os.getenv("OUTLINE_API_KEY")
OUTLINE_BASE_URL = os.getenv("OUTLINE_BASE_URL")

HEADERS = {
    "Authorization": f"Bearer {OUTLINE_API_KEY}",
    "Content-Type": "application/json"
}

def fetch_documents():
    print("üì• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–∑ Outline...")
    response = httpx.post(
        f"{OUTLINE_BASE_URL}/documents.list",
        headers=HEADERS,
        json={"limit": 100}
    )
    response.raise_for_status()

    json_data = response.json()
    print("üîç –û—Ç–≤–µ—Ç –æ—Ç API –ø–æ–ª—É—á–µ–Ω.")

    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç ‚Äî —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ data ‚Üí documents
    if isinstance(json_data, dict):
        data = json_data.get("data")
        if isinstance(data, dict) and "documents" in data:
            return data["documents"]
        elif isinstance(data, list):
            return data
        else:
            raise ValueError("‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ data –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")

    # –ï—Å–ª–∏ —Å—Ä–∞–∑—É —Å–ø–∏—Å–æ–∫ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    if isinstance(json_data, list):
        return json_data

    raise ValueError("‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Outline API")

def fetch_content(doc_id: str):
    response = httpx.post(
        f"{OUTLINE_BASE_URL}/documents.info",
        headers=HEADERS,
        json={"id": doc_id}
    )
    response.raise_for_status()
    return response.json()["data"]["text"]

def save_documents():
    Path("docs").mkdir(parents=True, exist_ok=True)

    documents = fetch_documents()
    for doc in documents:
        title = doc.get("title", f"doc_{doc.get('id', '')}")
        title = title.strip().replace(" ", "_").replace("/", "_")
        doc_id = doc["id"]
        print(f"üìÑ –°–æ—Ö—Ä–∞–Ω—è–µ–º: {title}")
        try:
            content = fetch_content(doc_id)
            with open(f"docs/{title[:64]}.txt", "w", encoding="utf-8") as f:
                f.write(content)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {title}: {e}")

if __name__ == "__main__":
    save_documents()


